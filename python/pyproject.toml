[build-system]
requires = [
  "setuptools>=55.0",
  "Cython>=3",
  "numpy>=1.16.6",
  "pyarrow~=21.0.0",
]

build-backend = "setuptools.build_meta"

[project]
name = "palletjack"
version = "2.8.0"
description = "Faster parquet metadata reading"
readme = "README.md"
requires-python = ">=3.9"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
]
dependencies = [
  "pyarrow~=21.0.0",
]


[tool.setuptools.packages.find]
include = ['palletjack*']

[tool.setuptools.package-data]
"*" = ["*.pxd", "*.h", "*.pyx"]

[project.urls]
Homepage = "https://github.com/G-Research/PalletJack"
Issues = "https://github.com/G-Research/PalletJack/issues"

########################### cibuildwheel ###########################
[tool.cibuildwheel]
skip = [
 "*_i686", 
 "*-musllinux_*",
 "*win32",
 "cp314-*",
 "cp314t-*",
]

# We use manylinux_2_28 for ABI compatibility with pyarrow
manylinux-x86_64-image = "manylinux_2_28"
manylinux-aarch64-image = "manylinux_2_28"

########################### cibuildwheel Linux #####################
[tool.cibuildwheel.linux]
before-build = [
  "pip install auditwheel",
  "ldd --version", # This will show the glibc version being used
  "python -c 'import sysconfig; print(sysconfig.get_config_var(\"CC\"))'", # Show the C compiler used
  "python -c 'import platform; print(platform.libc_ver())'", # Show libc version Python sees
  "ls -l /lib64/libc.so.6", # Another way to see glibc
]

repair-wheel-command = [
 "auditwheel repair --exclude libarrow.so.2100 --exclude libparquet.so.2100 -w {dest_dir} {wheel}",
]

# Run multiple commands using an array
before-all = [
  "git clone --depth 1 --branch v0.19.0 https://github.com/apache/thrift.git",
  "yum -y update",
  "yum -y groupinstall 'Development Tools'",
  "yum -y install libevent-devel zlib-devel openssl-devel boost-devel boost-static",
  "cd thrift",
  "./bootstrap.sh",
  "CFLAGS='-fPIC' CXXFLAGS='-fPIC' ./configure --with-cpp=yes --with-python=no --with-py3=no --enable-tests=no --enable-tutorial=no --enable-shared=no",
  "make",
  "make install",
]

########################### cibuildwheel Windows ###################
[tool.cibuildwheel.windows]
before-build = "pip install delvewheel"
repair-wheel-command = "delvewheel repair --exclude arrow.dll --exclude parquet.dll -w {dest_dir} {wheel}"
before-all = [
  "vcpkg install --x-manifest-root . --feature-flags=versions",
]

########################### cibuildwheel MacOS #####################
[tool.cibuildwheel.macos]
before-build = "pip install delocate"
repair-wheel-command = ""

before-all = [
  "vcpkg install --x-manifest-root . --feature-flags=versions",
]